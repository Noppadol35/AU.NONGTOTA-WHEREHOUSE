version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: app-db
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 5434
    command: postgres -p 5434 -c listen_addresses='*'
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5434:5434"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5434"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: app-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-backend
    environment:
      NODE_ENV: development
      PORT: 5001
      DATABASE_URL: "postgresql://postgres:postgres@app-db:5434/app?schema=public"
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    command: sh -c "npx prisma generate && npm install && npm run dev"
    volumes:
      - ./backend:/usr/src/app
      - backend-node-modules:/usr/src/app/node_modules
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network


volumes:
  db-data:
  backend-node-modules:

networks:
  app-network:
    driver: bridge
